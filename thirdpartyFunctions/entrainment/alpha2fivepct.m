%ALPHA2FIVEPCT  Convert alphabetic EEG cap labels (e.g., A1, D24) into
%   the five percent system by Oostenveld (e.g., Fp1, PPO10h). It also
%   converts BioSemi EXG channels in the following way:
%
%   EXG1 = M1  (mastoid)
%   EXG2 = M2
%   EXG3 = LO1 (lateral ocular)
%   EXG4 = LO2
%   EXG5 = IO1 (inferior ocular)
%   EXG6 = IO2
%
% Usage:
%   fivepct = alpha2fivepct(alpha)
%   EEG = alpha2fivepct(EEG)
%
% Input:
%   alpha = [string|cell of strings] Cell of alphabetical labels
%   EEG = [struct] eeglab structure with alphabetic labels. This input
%       requires that EEGLAB has been added to the MATLAB path (it needs
%       the pop_chanedit function to change the labels).
%
% Output:
%   fivepct = [string|cell of strings] Cell of five percent labels. Output
%       class is the same as the input. e.g., if you input a string, you'll
%       get a string back.
%   EEG = [struct] EEGLAB structure with five percent labels.

function EEG = alpha2fivepct(EEG, verbose)
if nargin < 2, verbose = true; end
if verbose, fprintf('\n'), end

% convert string input to cell, we'll convert it back later
if ischar(EEG)
    EEG = cellstr(EEG);
    do_char = true;
else
    do_char = false;
end

% get label conversion table (function below)
d = eeg_locsTable;

if isstruct(EEG)
    args = cell(1, size(d,1) * 2);
    for number = 1:size(d,1)
        ABCD = d{number,1};
        pct5 = d{number,2};
        if verbose
            fprintf('Changing channel %i (%s) to %s\n', number, ABCD, pct5)
        end
        if ~strcmp(EEG.chanlocs(number).labels, ABCD)
            warning(['Channel ', num2str(number), ...
                     ' is labelled ', EEG.chanlocs(number).labels, ...
                     ' instead of ', ABCD, '. Skipping.'])
        end
        args{(number*2)-1} = 'changefield';
        args{number*2}     = {number 'labels' pct5};
    end
    EEG = pop_chanedit(EEG, args{:});

elseif iscell(EEG)
    for i = 1:length(EEG)
        ind = ismember(d(:,1), upper(EEG{i}));
        if sum(ind) < 1
            warning('No channel match.')
        end
        EEG(i) = d(ind,2);
    end
end

% convert back to string if input was a string
if do_char
    EEG = EEG{1};
end

end

function d = eeg_locsTable

d = { ...
    'A1',   'Fp1'; ...
    'A2',   'AFp1'; ...
    'A3',   'AF7'; ...
    'A4',   'AF3'; ...
    'A5',   'AFF5h'; ...
    'A6',   'AFF1h'; ...
    'A7',   'F9'; ...
    'A8',   'F7'; ...
    'A9',   'F5'; ...
    'A10',  'F3'; ...
    'A11',  'F1'; ...
    'A12',  'FFT9h'; ...
    'A13',  'FFT7h'; ...
    'A14',  'FFC5h'; ...
    'A15',  'FFC3h'; ...
    'A16',  'FFC1h'; ...
    'A17',  'FT9'; ...
    'A18',  'FT7'; ...
    'A19',  'FC5'; ...
    'A20',  'FC3'; ...
    'A21',  'FC1'; ...
    'A22',  'FTT9h'; ...
    'A23',  'FTT7h'; ...
    'A24',  'FCC5h'; ...
    'A25',  'FCC3h'; ...
    'A26',  'FCC1h'; ...
    'A27',  'T7'; ...
    'A28',  'C5'; ...
    'A29',  'C3'; ...
    'A30',  'C1'; ...
    'A31',  'TTP7h'; ...
    'A32',  'CCP5h'; ...
    'B1',   'CCP3h'; ...
    'B2',   'CCP1h'; ...
    'B3',   'TP9'; ...
    'B4',   'TP7'; ...
    'B5',   'CP5'; ...
    'B6',   'CP3'; ...
    'B7',   'CP1'; ...
    'B8',   'CPz'; ...
    'B9',   'TPP7h'; ...
    'B10',  'CPP5h'; ...
    'B11',  'CPP3h'; ...
    'B12',  'CPP1h'; ...
    'B13',  'P9'; ...
    'B14',  'P7'; ...
    'B15',  'P5'; ...
    'B16',  'P3'; ...
    'B17',  'P1'; ...
    'B18',  'Pz'; ...
    'B19',  'PPO9h'; ...
    'B20',  'PPO5h'; ...
    'B21',  'PPO1h'; ...
    'B22',  'PO7'; ...
    'B23',  'PO3'; ...
    'B24',  'POz'; ...
    'B25',  'PO9'; ...
    'B26',  'POO9h'; ...
    'B27',  'O1'; ...
    'B28',  'POO1'; ...
    'B29',  'I1'; ...
    'B30',  'OI1h'; ... % was Ol1h
    'B31',  'Oz'; ...
    'B32',  'Iz'; ...
    'C1',   'Fpz'; ...
    'C2',   'Fp2'; ...
    'C3',   'AFp2'; ...
    'C4',   'AFz'; ...
    'C5',   'AF4'; ...
    'C6',   'AF8'; ...
    'C7',   'AFF2h'; ...
    'C8',   'AFF6h'; ...
    'C9',   'Fz'; ...
    'C10',  'F2'; ...
    'C11',  'F4'; ...
    'C12',  'F6'; ...
    'C13',  'F8'; ...
    'C14',  'F10'; ...
    'C15',  'FFC2h'; ...
    'C16',  'FFC4h'; ...
    'C17',  'FFC6h'; ...
    'C18',  'FFT8h'; ...
    'C19',  'FFT10h'; ...
    'C20',  'FCz'; ...
    'C21',  'FC2'; ...
    'C22',  'FC4'; ...
    'C23',  'FC6'; ...
    'C24',  'FT8'; ...
    'C25',  'FT10'; ...
    'C26',  'FCC2h'; ...
    'C27',  'FCC4h'; ...
    'C28',  'FCC6h'; ...
    'C29',  'FTT8h'; ...
    'C30',  'FTT10h'; ...
    'C31',  'Cz'; ...
    'C32',  'C2'; ...
    'D1',   'C4'; ...
    'D2',   'C6'; ...
    'D3',   'T8'; ...
    'D4',   'CCP2h'; ...
    'D5',   'CCP4h'; ...
    'D6',   'CCP6h'; ...
    'D7',   'TTP8h'; ...
    'D8',   'CP2'; ...
    'D9',   'CP4'; ...
    'D10',  'CP6'; ...
    'D11',  'TP8'; ...
    'D12',  'TP10'; ...
    'D13',  'CPP2h'; ...
    'D14',  'CPP4h'; ...
    'D15',  'CPP6h'; ...
    'D16',  'TPP8h'; ...
    'D17',  'P2'; ...
    'D18',  'P4'; ...
    'D19',  'P6'; ...
    'D20',  'P8'; ...
    'D21',  'P10'; ...
    'D22',  'PPO2h'; ...
    'D23',  'PPO6h'; ...
    'D24',  'PPO10h'; ...
    'D25',  'PO4'; ...
    'D26',  'PO8'; ...
    'D27',  'PO10'; ...
    'D28',  'POO2'; ...
    'D29',  'O2'; ...
    'D30',  'POO10h'; ...
    'D31',  'OI2h'; ...
    'D32',  'I2'; ...
    'EXG1', 'M1'; ...
    'EXG2', 'M2'; ...
    'EXG3', 'LO1'; ...
    'EXG4', 'LO2'; ...
    'EXG5', 'IO1'; ...
    'EXG6', 'IO2'};

end
